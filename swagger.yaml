swagger: "2.0"
info:
  description: "API para restaurante/tienda de comidas. Los usuarios podran registrarse, loguearse, solicitar una lista de productos y hacer un pedido. Solo el usuario administrador podrá realizar las operaciones de edicion del estado de los pedidos, consulta y eliminación de los mismos. También este podrá crear, consultar, eliminar y actualizar productos."
  version: "1.0.0"
  title: "Delilah-Resto"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/v2"
tags:
- name: "crear_usuario"
  description: "creación de usuario"
- name: "login"
  description: "login"
- name: "usuarios"
  description: "Operaciones sobre los usuarios"
- name: "productos"
  description: "Operaciones sobre los productos"
- name: "pedidos"
  description: "Operaciones sobre los pedidos"
- name: "nuevo_pedido"
  description: "Operacion de hacer un nuevo pedido"
- name: "actualizar_producto"
  description: "Operacion de actualizar el estado de un pedido"
- name: "subir_producto"
  description: "Operacion de crear un nuevo producto"
- name: "borrar_producto"
  description: "Operacion para borrar un producto"

schemes:
- "https"
- "http"
paths:
  /crear_usuario:
    post:
      tags:
      - "crear_usuario"
      summary: "Crea un nuevo usuario"
      description: ""
      operationId: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto usuario"
        required: true
        schema:
          $ref: "#/definitions/usuario"
      responses:
        "201":
          description: "Usuario agregado exitosamente"
          schema:
            $ref: "#/definitions/status_mensaje"
        "409":
          description: "El usuario ya existe"
          schema:
            $ref: "#/definitions/status_mensaje"
        "500":
          description: "Error inesperado"
          schema: 
            $ref: "#/definitions/status_mensaje"
  /login:
    post:
      tags:
      - "login"
      summary: "Login with your username and password"
      description: ""
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Login with your username and password"
        required: true
        schema:
          $ref: "#/definitions/usuario_login"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/usuario_login"
        "400":
          description: "Invalid Order"
          schema:
            $ref: "#/definitions/usuario_login"
  /usuarios:
    get:
      security:
        - Bearer: []
      tags:
      - "usuarios"
      summary: "Obtiene todos los usuarios registrados"
      description: "Si no ingresa un parametro obtiene la lista de usuarios, si ingresa un usuario(query) obtiene el usuario especificado"
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "query"
        name: "usuario"
        type: "string"
            
      responses:
        "200":
          description: "successful operation"
          schema:
              $ref: "#/definitions/array_usuarios"
        "404":
          description: "El usuario no existe"
        "401":
          description: "UnauthorizedError"
          schema:
            $ref: "#/definitions/status_mensaje"
        "500":
          description: "Error inesperado"
          schema: 
            $ref: "#/definitions/status_mensaje"
    delete:
      security:
        - Bearer: []
      tags:
      - "usuarios"
      summary: "Elimina un usuario"
      description: "Elimina un usuario"
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "ID of the order that needs to be deleted"
        required: true
        schema:
            $ref: "#/definitions/usuario_get"
      responses:
        "200":
          description: "succesfull"
          schema:
            $ref: "#/definitions/status_mensaje"
        "404":
          description: "El usuario no existe"
        "401":
          description: "UnauthorizedError"
          schema:
            $ref: "#/definitions/status_mensaje"
        "500":
          description: "Error inesperado"
          schema: 
            $ref: "#/definitions/status_mensaje"
    put:
      security:
        - Bearer: []
      tags:
      - "usuarios"
      summary: "Altera un usuario registrado"
      description: "Ingrese el nombre, campo y nuevo valor del usuario que desee modificar."
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
            $ref: "#/definitions/usuario_put"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/status_mensaje"
        "404":
          description: "El usuario no existe"
        "401":
          description: "UnauthorizedError"
          schema:
            $ref: "#/definitions/status_mensaje"
        "500":
          description: "Error inesperado"
          schema: 
            $ref: "#/definitions/status_mensaje"
  /nuevo_pedido:
    post:
      tags:
      - "nuevo_pedido"
      summary: "Crea un nuevo pedido"
      description: "Crea un nuevo pedido."
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Crea un nuevo pedido"
        required: true
        schema:
          $ref: "#/definitions/pedido"
      responses:
        "200":
          description: "operacion exitosa"
          schema:
            $ref: "#/definitions/status_mensaje"
        "500":
          description: "Error inesperado"
          schema: 
            $ref: "#/definitions/status_mensaje"
  /pedidos:
    get:
      security:
        - Bearer: []
      tags:
      - "pedidos"
      summary: "Obtiene la lista de pedidos"
      description: "Si no ingresa un parametro obtiene la lista de pedidos, si ingresa un id_pedido(query) obtiene el pedido especificado"
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "query"
        name: "id_pedido"
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/array_pedidos"
        "404":
          description: "El usuario no existe"
        "401":
          description: "UnauthorizedError"
          schema:
            $ref: "#/definitions/status_mensaje"
        "500":
          description: "Error inesperado"
          schema: 
            $ref: "#/definitions/status_mensaje"
    put:
      security:
        - Bearer: []
      tags:
      - "pedidos"
      summary: "Altera el estado de un pedido "
      description: "Ingrese el id_pedido y el nuevo estado del pedido que desee modificar."
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
            $ref: "#/definitions/modificar_pedido"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/status_mensaje"
        "404":
          description: "El numero de pedido es incorrecto"
        "401":
          description: "UnauthorizedError"
          schema:
            $ref: "#/definitions/status_mensaje"
        "500":
          description: "Error inesperado"
          schema: 
            $ref: "#/definitions/status_mensaje"
    delete:
      security:
        - Bearer: []
      tags:
      - "pedidos"
      summary: "Elimina un pedido"
      description: "Elimina un pedido"
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Ingresa un objecto con el id del pedido"
        required: true
        schema:
            $ref: "#/definitions/id_pedido"
      responses:
        "200":
          description: "succesfull"
          schema:
            $ref: "#/definitions/status_mensaje"
        "404":
          description: "El pedido no existe"
        "401":
          description: "UnauthorizedError"
          schema:
            $ref: "#/definitions/status_mensaje"
        "500":
          description: "Error inesperado"
          schema: 
            $ref: "#/definitions/status_mensaje"
  /actualizar_producto:
    put:
      security:
        - Bearer: []
      tags: 
      - "actualizar_producto"
      summary: "Podrás modificar el estado de un producto."
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/modificar_producto"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/status_mensaje"
        "400":
          description: "Invalid Order"
          schema:
            $ref: "#/definitions/status_mensaje"
        "404":
          description: "El producto no existe"
        "500":
          description: "Error inesperado"
          schema: 
            $ref: "#/definitions/status_mensaje"  
  /subir_producto:
    post:
      security:
        - Bearer: []
      tags:
      - "subir_producto"
      summary: "Crea un nuevo producto"
      description: "Crea un nuevo producto."
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Ingresa un objecto con las propiedades especificadas"
        required: true
        schema:
          $ref: "#/definitions/producto"
      responses:
        "200":
          description: "Producto agregado exitosamente"
          schema:
            $ref: "#/definitions/status_mensaje"
        "401":
          description: "UnauthorizedError"
          schema:
            $ref: "#/definitions/status_mensaje"
        "409":
          description: "El producto que quieres subir ya existe"
          schema:
            $ref: "#/definitions/status_mensaje"
        "500":
          description: "Error inesperado"
          schema: 
            $ref: "#/definitions/status_mensaje"
  /productos:
    get:
      tags:
      - "productos"
      summary: "Obtiene todos los productos registrados"
      description: "Para obtener todos los productos, no ingrese ningun parametro. Para obtener un producto especifico ingrese el nombre del producto con query."
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "query"
        name: "nombre"
        description: "ingrese el nombre del producto que busca"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/array_productos"
        "404":
          description: "Producto no encontrado"
        "401":
          description: "UnauthorizedError"
          schema:
            $ref: "#/definitions/status_mensaje"
        "500":
          description: "Error inesperado"
          schema: 
            $ref: "#/definitions/status_mensaje"
  /borrar_producto:
    delete:
      security:
        - Bearer: []
      tags:
      - "borrar_producto"
      summary: "Elimina un producto"
      description: "Elimina un producto"
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Ingrese el nombre de producto que desea eliminar en el body.nombre"
        required: true
        schema:
            $ref: "#/definitions/producto_get"
      responses:
        "200":
          description: "Producto eliminado exitosamente"
          schema:
            $ref: "#/definitions/status_mensaje"
        "404":
          description: "Producto no encontrado"
        "401":
          description: "UnauthorizedError"
          schema:
            $ref: "#/definitions/status_mensaje"
        "500":
          description: "Error inesperado"
          schema: 
            $ref: "#/definitions/status_mensaje"
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header  
definitions:
  producto_get:
      type: "object"
      properties:
        nombre: 
          type: "string"
  producto:
      type: "object"
      properties:
        id_producto: 
            type: "integer"
        nombre:
            type: "string"
        precio:
            type: "integer"
  array_productos:
      type: "array"
      items: 
        type: "object"
        properties:
          id_producto: 
            type: "integer"
          nombre:
            type: "string"
          precio:
            type: "integer"
  id_pedido:
    type: "object"
    properties:
      id_pedido:
        type: "string"
  modificar_pedido:
      type: "object"
      properties:
        id_pedido:
          type: "string"
        nuevo_estado:
          type: "string"
  array_pedidos:
    type: "array"
    items:
      type: "object"
      properties:
        estado:
          type: "string"
        hora: 
          type: "integer"
        id_pedido: 
          type: "integer"
        descripcion: 
          type: "string"
        pago: 
          type: "integer"
        usuario_id: 
          type: "integer"
        direccion: 
          type: "string"
  modificar_producto:
      type: "object"
      properties:
        nombre:
          type: "string"
        campo:
          type: "string"
        nuevo_valor:
          type: "string"
  status_mensaje:
      type: "object"
      properties:
        status: 
          type: "string"
        mensaje:
          type: "string"
  array_usuarios:
    type: "array"
    items: 
      type: "object"
      properties:
        usuario_id: 
          type: "integer"
        usuario:
          type: "string"
        nombre_apellido:
          type: "string"
        mail:
          type: "string"
        telefono:
          type: "integer"
        direccion:
          type: "string"
        contraseña:
          type: "string"
  pedido:
    type: "object"
    properties:
      estado:
        type: "string"
      hora: 
        type: "integer"
      id_pedido: 
        type: "integer"
      descripcion: 
        type: "string"
      pago: 
        type: "integer"
      usuario_id: 
        type: "integer"
      direccion: 
        type: "string"
  usuario_put:
    type: "object"
    properties:
      usuario:
        type: "string"
      campo:
        type: "string"
      nuevo_valor:
        type: "string"
  usuario_get:
    type: "object"
    properties:
      usuario:
        type: "string"
  usuario_login:
    type: "object"
    properties:
      status:
        type: "string"
      usuario:
        type: "string"
      mensaje:
        type: "string"
  usuario:
    type: "object"
    required:
    - "usuario_id"
    - "usuario"
    - "nombre_apellido"
    - "mail"
    - "telefono"
    - "direccion"
    - "contraseña"
    properties:
      usuario_id:
        type: "integer"
        format: "int64"
      usuario:
        type: "string"
        example: "nombredeusuario"
      nombre_apellido:
        type: "string"
      mail:
        type: "string"
      telefono:
        type: "integer"
      direccion:
        type: "string"
      contraseña:
        type: "string"
